<?xml version="1.0"?>
<ruleset name="Custom ruleset"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
    <description>
        This ruleset checks my code for bad stuff
    </description>
    <rule ref="category/java/bestpractices.xml/AvoidPrintStackTrace" />
    <rule ref="category/java/bestpractices.xml/AvoidStringBufferField" />
    <rule ref="category/java/bestpractices.xml/GuardLogStatement" />
    <rule ref="category/java/bestpractices.xml/ReplaceHashtableWithMap" />
    <rule ref="category/java/bestpractices.xml/ReplaceVectorWithList" />
    <rule ref="category/java/bestpractices.xml/SwitchStmtsShouldHaveDefault" />
    <rule ref="category/java/bestpractices.xml/SystemPrintln" />

    <rule ref="category/java/bestpractices.xml/UnusedImports" />
    <rule ref="category/java/bestpractices.xml/UseCollectionIsEmpty" />

    <rule ref="category/java/codestyle.xml/AvoidDollarSigns" />
    <rule ref="category/java/codestyle.xml/BooleanGetMethodName" />
    <rule ref="category/java/codestyle.xml/CallSuperInConstructor" />

    <!-- Class名必须首字母大写 -->
    <rule ref="category/java/codestyle.xml/ClassNamingConventions"  />
    <rule ref="category/java/codestyle.xml/DuplicateImports" />

    <rule ref="category/java/codestyle.xml/ForLoopsMustUseBraces" />
    <rule ref="category/java/codestyle.xml/IfElseStmtsMustUseBraces" />
    <rule ref="category/java/codestyle.xml/IfStmtsMustUseBraces" />

    <!-- 变量名称长度必须小于等于 -->
    <rule ref="category/java/codestyle.xml/LongVariable">
        <properties>
            <!-- 17 -->
            <property name="minimum" value="45"/>
        </properties>
    </rule>
    <!-- Method名必须首字母小写 -->
    <rule ref="category/java/codestyle.xml/MethodNamingConventions" />
    <rule ref="category/java/codestyle.xml/PackageCase" />

    <!-- Class名长度必须大于等于 -->
    <rule ref="category/java/codestyle.xml/ShortClassName">
        <properties>
            <property name="minimum" value="5"/>
        </properties>
    </rule>
    <!-- Method名长度必须大于等于 -->
    <rule ref="category/java/codestyle.xml/ShortMethodName">
        <properties>
            <property name="minimum" value="3"/>
        </properties>
    </rule>
    <rule ref="category/java/codestyle.xml/UnnecessaryModifier" />

    <rule ref="category/java/codestyle.xml/VariableNamingConventions" />
    <rule ref="category/java/codestyle.xml/WhileLoopsMustUseBraces" />

    <!-- if嵌套层数必须小于 -->
    <rule ref="category/java/design.xml/AvoidDeeplyNestedIfStmts">
        <properties>
            <property name="problemDepth" value="5"/>
        </properties>
    </rule>

    <rule ref="category/java/design.xml/AvoidThrowingNullPointerException" />
    <rule ref="category/java/design.xml/AvoidThrowingRawExceptionTypes" />
    <rule ref="category/java/design.xml/ExceptionAsFlowControl" />

    <!-- Class总计行数必须小于 -->
    <rule ref="category/java/design.xml/ExcessiveClassLength">
        <properties>
            <!--<property name="topscore" value="TODO"/>-->
            <property name="minimum" value="2000"/>
            <!--<property name="sigma" value="TODO"/>-->
        </properties>
    </rule>

    <!-- Method总计行数必须小于 -->
    <rule ref="category/java/design.xml/ExcessiveMethodLength">
        <properties>
            <!--<property name="topscore" value="TODO"/>-->
            <property name="minimum" value="500"/>
            <!--<property name="sigma" value="TODO"/>-->
        </properties>
    </rule>

    <!-- Method的参数个数必须小于 -->
    <rule ref="category/java/design.xml/ExcessiveParameterList">
        <properties>
            <!--<property name="topscore" value="TODO"/>-->
            <property name="minimum" value="5"/>
            <!--<property name="sigma" value="TODO"/>-->
        </properties>
    </rule>

    <!-- 禁止直接 throws Exception -->
    <rule ref="category/java/design.xml/SignatureDeclareThrowsException">
        <properties>
            <property name="IgnoreJUnitCompletely" value="true"/>
        </properties>
    </rule>

    <rule ref="category/java/errorprone.xml/AvoidCallingFinalize" />
    <rule ref="category/java/errorprone.xml/AvoidCatchingNPE" />

    <!-- 禁止if出现字面量 -->
    <rule ref="category/java/errorprone.xml/AvoidLiteralsInIfCondition" />
    <rule ref="category/java/errorprone.xml/AvoidLosingExceptionInformation" />
    <rule ref="category/java/errorprone.xml/BrokenNullCheck" />


    <!-- 禁止==比较 -->
    <rule ref="category/java/errorprone.xml/CompareObjectsWithEquals" />
    <rule ref="category/java/errorprone.xml/DoNotCallGarbageCollectionExplicitly" />
    <rule ref="category/java/errorprone.xml/DoNotCallSystemExit" />
    <rule ref="category/java/errorprone.xml/DoNotThrowExceptionInFinally" />
    <rule ref="category/java/errorprone.xml/DontImportSun" />
    <rule ref="category/java/errorprone.xml/DontUseFloatTypeForLoopIndices" />

    <!-- 禁止空catch块 -->
    <rule ref="category/java/errorprone.xml/EmptyCatchBlock">
        <properties>
            <!-- Empty blocks containing comments will be skipped -->
            <property name="allowCommentedBlocks" value="true"/>
            <!-- Empty blocks catching exceptions with names matching this regular expression will be skipped -->
            <!--<property name="allowExceptionNameRegex" value=""/>-->
        </properties>
    </rule>
    <rule ref="category/java/errorprone.xml/EmptyFinallyBlock" />
    <rule ref="category/java/errorprone.xml/EmptyIfStmt" />
    <rule ref="category/java/errorprone.xml/EmptyInitializer" />
    <rule ref="category/java/errorprone.xml/EmptyStatementBlock" />
    <rule ref="category/java/errorprone.xml/EmptyStatementNotInLoop" />
    <rule ref="category/java/errorprone.xml/EmptySwitchStatements" />
    <rule ref="category/java/errorprone.xml/EmptySynchronizedBlock" />
    <rule ref="category/java/errorprone.xml/EmptyTryBlock" />
    <rule ref="category/java/errorprone.xml/EmptyWhileStmt" />

    <rule ref="category/java/errorprone.xml/EqualsNull" />
    <rule ref="category/java/errorprone.xml/MissingBreakInSwitch" />
    <rule ref="category/java/errorprone.xml/NonCaseLabelInSwitchStatement" />
    <rule ref="category/java/errorprone.xml/OverrideBothEqualsAndHashcode" />

    <!-- 禁止finally块中使用return -->
    <rule ref="category/java/errorprone.xml/ReturnFromFinallyBlock" />
    <rule ref="category/java/errorprone.xml/UseCorrectExceptionLogging" />

    <rule ref="category/java/multithreading.xml/AvoidSynchronizedAtMethodLevel" />
    <rule ref="category/java/multithreading.xml/AvoidThreadGroup" />
    <rule ref="category/java/multithreading.xml/UnsynchronizedStaticDateFormatter" />

    <rule ref="category/java/performance.xml/AvoidUsingShortType" />
    <rule ref="category/java/performance.xml/BigIntegerInstantiation" />
    <rule ref="category/java/performance.xml/BooleanInstantiation" />
    <rule ref="category/java/performance.xml/ByteInstantiation" />
    <rule ref="category/java/performance.xml/InefficientEmptyStringCheck" />
    <rule ref="category/java/performance.xml/IntegerInstantiation" />
    <rule ref="category/java/performance.xml/LongInstantiation" />
    <rule ref="category/java/performance.xml/OptimizableToArrayCall" />
    <rule ref="category/java/performance.xml/ShortInstantiation" />
    <rule ref="category/java/performance.xml/StringInstantiation" />
    <rule ref="category/java/performance.xml/StringToString" />


</ruleset>

